name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: |
        npm install
        npm audit fix || true
    
    - name: Install Backend Dependencies
      working-directory: ./backend
      run: |
        npm install
        npm audit fix || true
    
    - name: Run Frontend Tests
      working-directory: ./frontend
      run: npm test
    
    - name: Run Backend Tests
      working-directory: ./backend
      run: npm test
    
    - name: Build Frontend
      working-directory: ./frontend
      run: npm run build
    
    - name: Deploy to GitHub Pages
      if: github.ref == 'refs/heads/main'
      working-directory: ./frontend
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        npm run deploy

  build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push backend image
      uses: docker/build-push-action@v5
      with:
        context: ./backend
        push: true
        tags: peymansohi/simple-backend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push frontend image
      uses: docker/build-push-action@v5
      with:
        context: ./frontend
        push: true
        tags: peymansohi/simple-frontend:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy-to-kubernetes:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
    - uses: actions/checkout@v3

    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: 'latest'

    - name: Deploy to Kubernetes
      run: |
        helm upgrade --install micromon ./helm/micromon \
          --set backend.image.tag=latest \
          --set frontend.image.tag=latest \
          --set mysql.auth.rootPassword=${{ secrets.MYSQL_ROOT_PASSWORD }} \
          --set mysql.auth.password=${{ secrets.MYSQL_PASSWORD }} \
          --set mysql.auth.username=${{ secrets.MYSQL_USER }} \
          --set mysql.auth.database=${{ secrets.MYSQL_DATABASE }}
      env:
        KUBECONFIG: ${{ secrets.KUBECONFIG }}

