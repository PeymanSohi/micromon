name: Security Scan

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * 0'  # Run weekly on Sunday

jobs:
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
    
    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: |
        npm install
        npm audit fix || true
    
    - name: Install Backend Dependencies
      working-directory: ./backend
      run: |
        npm install
        npm audit fix || true
    
    - name: Authenticate Snyk
      uses: snyk/actions@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
    
    - name: Run Snyk to check for vulnerabilities (Frontend)
      working-directory: ./frontend
      uses: snyk/actions@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        DEBUG: '*snyk*'
      with:
        args: --file=package.json --org=${{ secrets.SNYK_ORG }}
    
    - name: Run Snyk to check for vulnerabilities (Backend)
      working-directory: ./backend
      uses: snyk/actions@master
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        DEBUG: '*snyk*'
      with:
        args: --file=package.json --org=${{ secrets.SNYK_ORG }}
    
    - name: Run SonarQube Scan
      uses: SonarSource/sonarqube-scan-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    
    - name: Run OWASP Dependency Check
      uses: dependency-check/Dependency-Check_Action@main
      with:
        project: 'micromon'
        path: '.'
        format: 'HTML'
        out: 'reports' 